@using ProjectInformatics.Entities;
@model List<Message>
<head>
    <meta charset="utf-8" />
    <title>SignalR Chat - Metanit.com</title>
</head>
<body>
    <h1>Hi, @User.Identity.Name!</h1>
    <div id="header"></div><br />

    <div id="inputForm">
        <input type="text" id="message" />
        <input type="button" id="sendBtn" value="Отправить" />
    </div>
    <div id="chatroom"></div>
    @foreach(var e in Model)
    {
        <p>@e.UserName : @e.MessageText</p>
    }
    <script src="~/js/signalr/dist/browser/signalr.min.js"></script>
    <script>
        const hubConnection = new signalR.HubConnectionBuilder()
            .withUrl("/chat")
            .build();

        let userName = '';
        // получение сообщения от сервера
        hubConnection.on('Send', function (message, userName) {

            // создаем элемент <b> для имени пользователя
            let userNameElem = document.createElement("b");
            userNameElem.appendChild(document.createTextNode(userName + ': '));

            // создает элемент <p> для сообщения пользователя
            let elem = document.createElement("p");
            elem.appendChild(userNameElem);
            elem.appendChild(document.createTextNode(message));

            var firstElem = document.getElementById("chatroom").firstChild;
            document.getElementById("chatroom").insertBefore(elem, firstElem);

        });

        // отправка сообщения на сервер
        document.getElementById("sendBtn").addEventListener("click", function (e) {
            userName=@Json.Serialize(User.Identity.Name);
            let message = document.getElementById("message").value;
            hubConnection.invoke("Send", message, userName);
        });

        hubConnection.start();
    </script>
</body>


